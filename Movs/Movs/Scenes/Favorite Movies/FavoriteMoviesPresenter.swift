//
//  FavoriteMoviesPresenter.swift
//  Movs
//
//  Created by Tiago Chaves on 15/08/19.
//  Copyright (c) 2019 Tiago Chaves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FavoriteMoviesPresentationLogic {
	func presentFavoriteMovies(response: FavoriteMovies.GetFavoriteMovies.Response)
	func presentMovieDetail(response: FavoriteMovies.ShowMovieDetail.Response)
}

class FavoriteMoviesPresenter: FavoriteMoviesPresentationLogic {
	
	weak var viewController: FavoriteMoviesDisplayLogic?
	
	// MARK: - Get Favorite Movies
	
	func presentFavoriteMovies(response: FavoriteMovies.GetFavoriteMovies.Response) {
		
		var viewModel:FavoriteMovies.GetFavoriteMovies.ViewModel
		
		if response.error == nil {
			
			let favoriteMoviesViewModel = getFavoriteMoviesView(response.favoriteMovies ?? [])
			viewModel = FavoriteMovies.GetFavoriteMovies.ViewModel(favoriteMovies: favoriteMoviesViewModel, error: nil)
		}else{
			viewModel = FavoriteMovies.GetFavoriteMovies.ViewModel(favoriteMovies: nil, error: response.error)
		}
		
		viewController?.displayFavoriteMovies(viewModel: viewModel)
	}
	
	private func getFavoriteMoviesView(_ movies:[Movie]) -> [FavoriteMovieViewModel] {
		
		var moviesView:[FavoriteMovieViewModel] = []
		
		for movie in movies {
			
			let movieViewModel = FavoriteMovieViewModel(id: movie.id,
														title: movie.title,
														posterUrl: movie.poster,
														year: movie.date?.getYear(),
														overview: movie.overview)
			moviesView.append(movieViewModel)
		}
		
		return moviesView
	}
	
	// MARK: - Show Movie Detail
	
	func presentMovieDetail(response: FavoriteMovies.ShowMovieDetail.Response) {
		
		viewController?.displayMovieDetail(viewModel: FavoriteMovies.ShowMovieDetail.ViewModel())
	}
}
