//
//  MovieDetailViewController.swift
//  Movs
//
//  Created by Tiago Chaves on 14/08/19.
//  Copyright (c) 2019 Tiago Chaves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieDetailDisplayLogic: class {
	func displayMovieDetail(viewModel: MovieDetail.ShowDetail.ViewModel)
	func displayFavoriteStatus(viewModel: MovieDetail.FavoriteMovie.ViewModel)
}

class MovieDetailViewController: UIViewController, MovieDetailDisplayLogic {
	
	var interactor: MovieDetailBusinessLogic?
	var router: (NSObjectProtocol & MovieDetailRoutingLogic & MovieDetailDataPassing)?
	
	// MARK: - Object lifecycle
	
	override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
		
		super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
		setup()
	}
	
	required init?(coder aDecoder: NSCoder) {
		
		super.init(coder: aDecoder)
		setup()
	}
	
	// MARK: - Setup
	
	private func setup() {
		
		let viewController = self
		let interactor = MovieDetailInteractor()
		let presenter = MovieDetailPresenter()
		let router = MovieDetailRouter()
		
		viewController.interactor = interactor
		viewController.router = router
		interactor.presenter = presenter
		presenter.viewController = viewController
		router.viewController = viewController
		router.dataStore = interactor
	}
	
	// MARK: - View lifecycle
	
	override func viewDidLoad() {
		
		super.viewDidLoad()
		getMovieDetail()
		getFavoriteStatus()
	}
	
	// MARK: - Outlets & Vars
	
	@IBOutlet weak var movieImageView: UIImageView!
	@IBOutlet weak var titleLabel: UILabel!
	
	@IBOutlet weak var yearLabel: UILabel!
	@IBOutlet weak var genresLabel: UILabel!
	@IBOutlet weak var movieOverviewLabel: UILabel!
	
	@IBOutlet weak var favoriteButton: UIButton!
	
	// MARK: - IBActions
	
	@IBAction func favorite(_ sender: UIButton) {
		
		interactor?.favoriteMovie(request: MovieDetail.FavoriteMovie.Request())
	}
	
	// MARK: - Show Movie Detail
	
	private func getMovieDetail() {
		
		let request = MovieDetail.ShowDetail.Request()
		interactor?.getMovieDetail(request: request)
	}
	
	func displayMovieDetail(viewModel: MovieDetail.ShowDetail.ViewModel) {

		let movie = viewModel.movieDetail
		let imageUrl = "https://image.tmdb.org/t/p/w500\(movie.backdropUrl)"
		
		movieImageView.setImage(withUrl:imageUrl)
		titleLabel.text = movie.title
		yearLabel.text = movie.year
		genresLabel.text = movie.genres
		movieOverviewLabel.text = movie.overview
	}
	
	// MARK: - Favorite Movie
	
	private func getFavoriteStatus() {
		
		interactor?.getFavoriteStatus(request: MovieDetail.FavoriteMovie.Request())
	}
	
	func displayFavoriteStatus(viewModel: MovieDetail.FavoriteMovie.ViewModel) {
		
		let imageName = viewModel.isFavorited ? "favorite_full_icon" : "favorite_empty_icon"
		
		DispatchQueue.main.async {
			self.favoriteButton.setImage(UIImage(named: imageName), for: .normal)
		}
	}
}
