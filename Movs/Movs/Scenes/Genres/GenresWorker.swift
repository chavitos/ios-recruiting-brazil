//
//  GenresWorker.swift
//  Movs
//
//  Created by Tiago Chaves on 14/08/19.
//  Copyright (c) 2019 Tiago Chaves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData

class GenresWorker {
	
	var worker:GenresListWorkerProtocol
	
	init(_ worker:GenresListWorkerProtocol){
		self.worker = worker
	}
	
	func getGenresList(completionHandler:@escaping ([GenreData]?,Error?) -> Void) {
		
		let context:NSManagedObjectContext = CoreDataManager.sharedInstance.persistentContainer.viewContext
		let fetch = Genre.genreFetchRequest()
		var result:[Genre] = []
		
		do{
			result = try context.fetch(fetch)
		}catch let error{
			NSLog("Error trying to access coredata entity Genre: \(error)")
			return
		}
		
		if result.count <= 0 {
			NSLog("Genres are not saved in coredata...Requesting in network...")
			worker.getGenresList(completionHandler: { (genreList: () throws -> [GenreData])->Void in
				
				do {
					let genreList = try genreList()
					NSLog("Genres downloaded!")
					completionHandler(genreList,nil)
				}catch let error{
					NSLog("Error trying to get genres in network \(error.localizedDescription)")
					completionHandler(nil,error)
				}
			})
		}
	}
}

protocol GenresListWorkerProtocol {
	func getGenresList(completionHandler:@escaping (() throws -> [GenreData]) -> Void)
}
