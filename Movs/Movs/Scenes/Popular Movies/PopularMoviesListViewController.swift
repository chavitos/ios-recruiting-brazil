//
//  PopularMoviesListViewController.swift
//  Movs
//
//  Created by Tiago Chaves on 11/08/19.
//  Copyright (c) 2019 Tiago Chaves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PopularMoviesListDisplayLogic: class {
	func displaySomething(viewModel: PopularMoviesList.Something.ViewModel)
}

class PopularMoviesListViewController: UIViewController, PopularMoviesListDisplayLogic {
	
	var interactor: PopularMoviesListBusinessLogic?
	var router: (NSObjectProtocol & PopularMoviesListRoutingLogic & PopularMoviesListDataPassing)?
	
	// MARK: Object lifecycle
	
	override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
		
		super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
		setup()
	}
	
	required init?(coder aDecoder: NSCoder) {
		
		super.init(coder: aDecoder)
		setup()
	}
	
	// MARK: Setup
	
	private func setup() {
		
		let viewController = self
		let interactor = PopularMoviesListInteractor()
		let presenter = PopularMoviesListPresenter()
		let router = PopularMoviesListRouter()
		
		viewController.interactor = interactor
		viewController.router = router
		interactor.presenter = presenter
		presenter.viewController = viewController
		router.viewController = viewController
		router.dataStore = interactor
	}
	
	// MARK: Routing
	
	override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
		
		if let scene = segue.identifier {
		
			let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
			
			if let router = router, router.responds(to: selector) {
				router.perform(selector, with: segue)
			}
		}
	}
	
	// MARK: View lifecycle
	
	override func viewDidLoad() {
		
		super.viewDidLoad()
		
		self.navigationController?.navigationBar.shadowImage = UIImage()
		
		doSomething()
	}
	
	// MARK: Do something
	
	@IBOutlet weak var searchBar: UISearchBar!
	@IBOutlet weak var collectionView: UICollectionView!
	
	let cellIdentifier = "MovieCell"
	
	func doSomething() {
		
		let request = PopularMoviesList.Something.Request()
		interactor?.doSomething(request: request)
	}
	
	func displaySomething(viewModel: PopularMoviesList.Something.ViewModel) {
		
		//nameTextField.text = viewModel.name
	}
}

extension PopularMoviesListViewController: UICollectionViewDelegate, UICollectionViewDataSource {
	
	func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
		return 1
	}
	
	func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
		
		
		let cell = collectionView.dequeueReusableCell(withReuseIdentifier: cellIdentifier, for: indexPath) as! MovieCollectionViewCell
		
		return cell
	}
}
